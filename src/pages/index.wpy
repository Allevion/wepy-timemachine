<style lang="less" type="text/less" scoped>
@import "../assets/styles/app";
.popup__content {
  border-radius: 5rpx;
  background: white ;
}
.popup__desc {
  width: 400rpx;
  height: 200rpx;
  text-align: center;
  font-size: 14px;
  line-height: 200rpx;
}
.popup__btn {
  background: white ;
  color: @theme-color;
  border-width: 0px;
}
</style>

<template>
  <basepage class="basepage">
    <view @tap="wxlogin">wxlogin</view>
    <wxc-popup id="login__popup" align="center" locked="{{true}}">
      <view class="popup__content">
        <view class="popup__desc text-secondary">先登录</view>
        <view class="divider-horizontal"></view>
        <button class="popup__btn" @tap="hideLoginDialog" open-type="getUserInfo"
                bindgetuserinfo="getUserInfo" plain="true">登录</button>
      </view>
    </wxc-popup>

  </basepage>
</template>

<script>
  import Basepage from 'src/base/basepage'
  import basepage from 'src/components/basepage'
  import wepy from 'wepy'
  import req from '@/network'
  export default class Index extends wepy.page {
    mixins = [Basepage]
    config = {
      navigationBarTitleText: '妈妈钱包助手',
      usingComponents: {
        'wxc-toast': '../../packages/@minui/wxc-toast/dist/index',
        'wxc-popup': '../../packages/@minui/wxc-popup/dist/index',
        'wxc-dialog': '../../packages/@minui/wxc-dialog/dist/index'
      }
    }
    components = {
      basepage: basepage
    }
    props = {}
    data = {
      userInfo: {},
      hasUserInfo: false,
      getUserInfoFail: false,
      canIUse: wx.canIUse('button.open-type.getUserInfo')
    }
    methods = {
      wxlogin() {

      },
      getUserInfo(e) {
        console.log(e)
        if (e.detail.userInfo) {
          this.afterWxLogin(e.detail)
        } else {
          this.openSetting()
        }
      },
      onConfirm() {
        this.hideDialog()
      }
    }
    events = {}
    hideLoginDialog() {
      const dialogComponent = this.$wxpage.selectComponent('#login__popup')
      dialogComponent && dialogComponent.hide()
    }
    showLoginDialog() {
      const dialogComponent = this.$wxpage.selectComponent('#login__popup')
      dialogComponent && dialogComponent.show()
    }
    async onLoad() {
      this.getWxSession()
      if (wepy.$instance.globalData.userInfo && wepy.$instance.globalData.userInfo.unionid) {
        console.log(1)
        this.updateUserInfo(wepy.$instance.globalData.userInfo)
        this.goMain()
      } else if (this.data.canIUse) {
        console.log(2)
        // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
        // 所以此处加入 callback 以防止这种情况
        this.showLoginDialog()
        wepy.$instance.userInfoReadyCallback = res => {
          console.log(12)
          this.afterWxLogin(res)
        }
      } else {
        try {
          wx.getUserInfo({
            withCredentials: true,
            success(res) {
              this.afterWxLogin(res)
            }
          })
        } catch (e) {
          this.showLoginDialog()
        }
      }
    }
    updateUserInfo(userInfo) {
      wepy.$instance.globalData.userInfo = userInfo
      wx.setStorage({
        key: 'userInfo',
        data: userInfo
      })
      this.userInfo = userInfo
      this.hasUserInfo = true
      this.$apply()
    }
    openSetting() {
      const that = this
      if (wx.openSetting) {
        wx.openSetting({
          success: function (res) {
            console.log(9)
            that.login()
          }
        })
      } else {
        console.log(10)
        wx.showModal({
          title: '授权提示',
          content: '小程序需要您的微信授权才能使用哦~ 错过授权页面的处理方法：删除小程序->重新搜索进入->点击授权按钮'
        })
      }
    }
    goMain() {
      wx.navigateTo({
        url: 'home'
      })
    }
    afterWxLogin(detail) {
      this.updateUserInfo(detail.userInfo)
      this.getWxId(detail)
    }
    checkBindState() {
      this.goBindPhone()
    }
    goBindPhone() {
      wx.navigateTo({
        url: 'loginReg'
      })
    }
    getWxSession() {
      const that = this
      wx.login({
        success: res => {
          wx.cloud.callFunction({
            name: 'code2Session',
            data: {
              code: res.code
            }
          }).then(res => {
            that.updateUserInfo({
              ...wepy.$instance.globalData.userInfo,
              ...res.result
            })
            console.debug(wepy.$instance.globalData.userInfo)
          })
        }
      })
    }

    getWxId(detail) {
      if (wepy.$instance.globalData.userInfo.unionid) {
        this.goMain()
      } else {
        const that = this
        wx.cloud.callFunction({
          name: 'decryptData',
          data: detail
        }).then(res => {
          console.debug(res)
          wx.cloud.callFunction({
            name: 'encrypt',
            data: {
              data: res.result.unionId
            }
          }).then(res2 => {
            that.updateUserInfo({
              ...wepy.$instance.globalData.userInfo,
              ...{
                unionid: res2.result,
                openid: res.result.openId
              }
            })
            const params = {
              unionid: res2.result,
              device: '4',
            }
            req.post('weixinLogin.htm', params).then(res => {
              console.debug(res)
              that.goMain()
            }).catch(e => {
              that.goBindPhone()
            })
          })
        })
      }
    }
  }
</script>
