<template>
  <view class="container">
    <view class="zan-panel">
      <view class="zan-cell zan-cell--access user-info-cell" >
        <view class="zan-cell__icon avatar-container">
          <button class="avatar" open-type="getUserInfo"
                 bindgetuserinfo="getUserInfo" plain="true">
            <image class="avatar" src='{{avatarUrl}}'/>
          </button>
        </view>
        <view class="zan-cell__bd">
          <view class="nickname">{{username}}</view>
          <view class="location">{{userInfo.province}} {{userInfo.city}}</view>
        </view>
        <view class="zan-cell__ft"></view>
      </view>
    </view>
  </view>
</template>

<style lang="less" scoped type="text/less">
.icon-language{
  color: #09f;
}
.icon-feedback2{
  color: #0c9;
}
.icon-about1{
  color: #fc3;
}
.user-info-cell{
  height: 70px;
  .avatar-container{
    display: flex;
    align-items: center;
    .avatar{
      width: 50px;
      height: 50px;
      border-radius: 4px;
      border-width: 0px;
      padding:0px;
    }
  }
  .location {
    margin-top: 5px;
    font-size: 13px;
    color: #858585;
  }
}
</style>


<script>
import wepy from 'wepy'
import objectUtils from 'src/utils/objectUtils'

export default class Settings extends wepy.page {
  config = {
    navigationBarTitleText: 'Settings'
  }

  data = {
    userInfo: {}
  }

  methods = {
    getUserInfo(e) {
      this.userInfo = e.detail.userInfo
      this.$apply()
    }
  }

  computed = {
    avatarUrl() {
      if (objectUtils.isEmpty(this.userInfo) || objectUtils.isEmpty(this.userInfo.avatarUrl)) {
        return '../assets/images/head.jpeg'
      } else {
        return this.userInfo.avatarUrl
      }
    },
    username() {
      if (objectUtils.isEmpty(this.userInfo.nickName)) {
        if (objectUtils.isEmpty(this.userInfo.phone)) {
          return '未登录'
        } else {
          return this.userInfo.phone
        }
      } else {
        return this.userInfo.nickName
      }
    }

  }

  events = {}

  onLoad() {
    this.$parent.getUserInfo().then(user => {
      this.userInfo = user
      this.$apply()
    })
  }
}
</script>
